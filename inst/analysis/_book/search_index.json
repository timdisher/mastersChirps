[["index.html", "Masters analysis Report 1 Project Information", " Masters analysis Report Tim Disher 2021-04-11 1 Project Information This project uses a Masters pool that me and some friends joined as a way to explore web/pdf scraping and a quick/fun look at clustering with PCA. "],["import-and-clean-data.html", "2 Import and Clean Data", " 2 Import and Clean Data The original dataset was organized based on how the the pool was run with picks in columns. We will want to make this much wider by having each golfer as a column with a binary indicator of whether or not a given member of the pool selected them. data(&quot;entry_picks_anon&quot;) wide_dat &lt;- entry_picks_anon %&gt;% pivot_longer(cols = -alt_name) %&gt;% mutate(name = value, value = 1) %&gt;% pivot_wider(names_from = name, values_from= value) %&gt;% mutate_at(vars(-alt_name), ~ ifelse(is.na(.), 0, .)) report &lt;- data_validation_report() golfers &lt;- entry_picks_anon %&gt;% select(-alt_name) %&gt;% unlist() %&gt;% unique test_picks &lt;- all(wide_dat %&gt;% mutate(tot_pick = rowSums(across(`Jon Rahm`:`Robert MacIntyre`))) %&gt;% pull(tot_pick) == 8) validate(wide_dat, &quot;Validate player selection data&quot;) %&gt;% validate_if(all(test_picks), description = &quot;Verify everyone has 8 picks and nobody has any NA&quot;) %&gt;% validate_cols(description = &quot;Test all values are 0 or 1&quot;, in_set(0,1), -alt_name) %&gt;% validate_if(description = &quot;Test all 272 players are present&quot;, nrow(wide_dat) == 272) %&gt;% validate_if(description = &quot;Test all golders are present&quot;, all(golfers %in% colnames(wide_dat))) %&gt;% add_results(report) "],["player-choice-clustering.html", "3 Player Choice Clustering 3.1 Example", " 3 Player Choice Clustering 3.1 Example A brief set of example code was provided by Ryan based on this tutorial. The analysis is based on the mtcars dataset and provides a very bare bones showcase of the prcomp function and ggbiplot. First we create the PCA object using prcomp limited to continuous variables only. This was done because the other variables in mtcars are categorical/ordinal which do not work well with PCA without further processing. mtcars.pca &lt;- prcomp(mtcars[,c(1:7,10,11)], center = TRUE, scale. = TRUE) summary(mtcars.pca) ## Importance of components: ## PC1 PC2 PC3 PC4 PC5 PC6 PC7 PC8 PC9 ## Standard deviation 2.3782 1.4429 0.71008 0.51481 0.42797 0.35184 0.32413 0.2419 0.14896 ## Proportion of Variance 0.6284 0.2313 0.05602 0.02945 0.02035 0.01375 0.01167 0.0065 0.00247 ## Cumulative Proportion 0.6284 0.8598 0.91581 0.94525 0.96560 0.97936 0.99103 0.9975 1.00000 We can them make a simple plot to show how different variables are related. The post goes into some extra details around drawing ellipses etc but we won’t get into that until the analysis phase if there is something interesting. One of the concepts that they showed that was pretty interesting though was how this type of plot can help you to identify variables that might be important for classification problems. For example all of the american cars cluster tightly in one section of the plot, suggesting they would be important in an “American vs not American” classification. ggbiplot(mtcars.pca,ellipse=TRUE,choices=c(3,4), labels=rownames(mtcars)) "],["results-analysis.html", "4 Results Analysis 4.1 Examples from Ryan", " 4 Results Analysis 4.1 Examples from Ryan Ryan made a nice start on some basic line plots that we can build on from here. golf_data &lt;- tribble( ~name, ~day, ~pos, ~icon, &quot;T&quot;, &quot;1&quot;, 104, NA, &quot;C&quot;, &quot;1&quot;, 102, NA, &quot;I&quot;, &quot;1&quot;, 145, NA, &quot;J&quot;, &quot;1&quot;, 164, NA, &quot;R&quot;, &quot;1&quot;, 170, NA, # Day Two &quot;T&quot;, &quot;2&quot;, 67, &quot;/home/rbatten/learning-r/masterChirpsRBcalcs/masters-jacket.png&quot;, &quot;C&quot;, &quot;2&quot;, 121, NA, &quot;I&quot;, &quot;2&quot;, 200, NA, &quot;J&quot;, &quot;2&quot;, 109, NA, &quot;R&quot;, &quot;2&quot;, 117, NA ) ggplot(golf_data, mapping = aes(x = day, y = pos, group = name)) + scale_y_reverse() + geom_line(aes(color = name)) + geom_point() + theme_minimal() + ggtitle(&quot;Master&#39;s Pool Results&quot;) + scale_color_manual(values = c(&quot;T&quot; = &quot;#006B54&quot;, &quot;C&quot; = &quot;#DC4605&quot;, &quot;I&quot; = &quot;#007298&quot;, &quot;J&quot; = &quot;#ED8B00&quot;, &quot;R&quot; = &quot;#002F6C&quot;)) + geom_image(aes(image = icon), size = 0.05) "]]
